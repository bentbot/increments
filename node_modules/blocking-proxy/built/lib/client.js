"use strict";
var http = require('http');
var url = require('url');
var BPClient = (function () {
    function BPClient(bpUrlValue) {
        var bpUrl = url.parse(bpUrlValue);
        this.hostname = bpUrl.hostname;
        this.port = parseInt(bpUrl.port);
    }
    BPClient.prototype.setSynchronization = function (enabled) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var options = { host: _this.hostname, port: _this.port, method: 'POST', path: '/stabilize_proxy/enabled' };
            var request = http.request(options, function (response) {
                response.on('data', function () { });
                response.on('error', function (err) { return reject(err); });
                response.on('end', function () {
                    resolve();
                });
            });
            request.write(JSON.stringify({ value: enabled }));
            request.end();
        });
    };
    BPClient.prototype.isSyncEnabled = function () {
        var _this = this;
        return new Promise(function (res) {
            var options = { host: _this.hostname, port: _this.port, path: '/stabilize_proxy/enabled' };
            http.get(options, function (response) {
                var body = '';
                response.on('data', function (data) {
                    body += data;
                });
                response.on('end', function () {
                    res(JSON.parse(body).value);
                });
            });
        });
    };
    return BPClient;
}());
exports.BPClient = BPClient;
//# sourceMappingURL=client.js.map