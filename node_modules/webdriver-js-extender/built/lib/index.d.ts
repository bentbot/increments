/// <reference types="selenium-webdriver" />
import * as webdriver from 'selenium-webdriver';
export interface ExtendedWebDriver extends webdriver.WebDriver {
    getNetworkConnection: () => webdriver.promise.Promise<number>;
    setNetworkConnection: (type: number) => webdriver.promise.Promise<void>;
}
export declare function extend(baseDriver: webdriver.WebDriver, fallbackGracefully?: boolean): ExtendedWebDriver;
/**
 * Patches webdriver so that the extender can defie new commands.
 *
 * @example
 * patch(require('selenium-webdriver/lib/command'),
 *     require('selenium-webdriver/executors'),
 *     require('selenium-webdriver/http'));
 *
 * @param {*} lib_command The object at 'selenium-webdriver/lib/command'
 * @param {*} executors The object at 'selenium-webdriver/executors'
 * @param {*} http The object at 'selenium-webdriver/http'
 */
export declare function patch(lib_command: any, executors: any, http: any): void;
